[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name="pre_commit_hooks"
authors=[
    {name = "Benjamin Mummery", email="benjamin.mummery@zapatacomputing.com"}
]
description = "A selection of quality-of-life tools for use with pre-commit."
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
dynamic = ["version"]
dependencies = [
    "gitpython >= 3.1.31",
    "pyyaml >= 5.4.1",
    "identify >= 2.5.24",
    "restructuredtext_lint >= 1.4.0",
    "tomli"
]

[project.scripts]
add-copyright = "src.add_copyright_hook.add_copyright:main"
add-msg-issue = "src.add_msg_issue_hook.add_msg_issue:main"
sort-file-contents = "src.sort_file_contents_hook.sort_file_contents:main"
update-copyright = "src.update_copyright_hook.update_copyright:main"

[project.optional-dependencies]
dev = [
    "freezegun",
    "pre-commit",
    "pytest",
    "pytest-cov",
    "pytest-git",
    "pytest-mock",
    "restructuredtext_lint",
]

[tool.setuptools.packages]
find = {}

[tool.distutils.bdist_wheel]
universal = true

[tool.mypy]
exclude = "tests/"
warn_unused_configs = true
check_untyped_defs = true

[[tool.mypy.overrides]]
module="tests.*"
ignore_errors = true

[tool.pytest.ini_options]
addopts = "--strict-markers"

[tool.interrogate]
ignore-init-method = true
fail-under = 100
verbose = 2
ignore_magic = true

[tool.flake8]
ignore = ["E203", "W503"]
max-line-length = 88
style="google"
count = true
arg-type-hints-in-docstring = true